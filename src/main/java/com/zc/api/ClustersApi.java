/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.4).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.zc.api;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.zc.model.ClusterModel;
import com.zc.model.IndexModel;
import com.zc.model.ResultEntity;
import com.zc.model.TypeModel;

import javax.validation.Valid;
import java.util.List;

@Api(value = "clusters", description = "the clusters API")
public interface ClustersApi {

    @ApiOperation(value = "添加一个elasticsearch集群", nickname = "addCluster", notes = "", response = ResultEntity.class, tags={ "clusters", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ResultEntity.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/clusters",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ResultEntity> addCluster(@ApiParam(value = "集群实体" ,required=true )  @Valid @RequestBody ClusterModel body);


    @ApiOperation(value = "编辑索引信息", nickname = "addIndexInfo", notes = "", response = ResultEntity.class, tags={ "indexes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ResultEntity.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/clusters/{cluster-id}/indexes/{index-name}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ResultEntity> addIndexInfo(@ApiParam(value = "集群唯一标识",required=true) @PathVariable("cluster-id") String clusterId,@ApiParam(value = "索引名称",required=true) @PathVariable("index-name") String indexName,@ApiParam(value = "索引实体" ,required=true )  @Valid @RequestBody IndexModel body);


    @ApiOperation(value = "编辑type信息", nickname = "addTypeInfo", notes = "", response = ResultEntity.class, tags={ "types", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ResultEntity.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/clusters/{cluster-id}/indexes/{index-name}/types/{type-name}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ResultEntity> addTypeInfo(@ApiParam(value = "集群唯一标识",required=true) @PathVariable("cluster-id") String clusterId,@ApiParam(value = "索引名称",required=true) @PathVariable("index-name") String indexName,@ApiParam(value = "type名称",required=true) @PathVariable("type-name") String typeName,@ApiParam(value = "索引实体" ,required=true )  @Valid @RequestBody TypeModel body);


    @ApiOperation(value = "删除一个elasticsearch集群", nickname = "deleteCluster", notes = "", response = ResultEntity.class, tags={ "clusters", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ResultEntity.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/clusters/{cluster-id}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<ResultEntity> deleteCluster(@ApiParam(value = "集群唯一标识",required=true) @PathVariable("cluster-id") String clusterId);


    @ApiOperation(value = "删除索引信息", nickname = "deleteIndexInfo", notes = "", response = ResultEntity.class, tags={ "indexes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ResultEntity.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/clusters/{cluster-id}/indexes/{index-name}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<ResultEntity> deleteIndexInfo(@ApiParam(value = "集群唯一标识",required=true) @PathVariable("cluster-id") String clusterId,@ApiParam(value = "索引名称",required=true) @PathVariable("index-name") String indexName);


    @ApiOperation(value = "删除type信息", nickname = "deleteTypeInfo", notes = "", response = ResultEntity.class, tags={ "types", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ResultEntity.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/clusters/{cluster-id}/indexes/{index-name}/types/{type-name}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<ResultEntity> deleteTypeInfo(@ApiParam(value = "集群唯一标识",required=true) @PathVariable("cluster-id") String clusterId,@ApiParam(value = "索引名称",required=true) @PathVariable("index-name") String indexName,@ApiParam(value = "type名称",required=true) @PathVariable("type-name") String typeName);


    @ApiOperation(value = "获取所有elasticsearch集群", nickname = "getClusterList", notes = "", response = ClusterModel.class, responseContainer = "List", tags={ "clusters", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ClusterModel.class, responseContainer = "List"),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/clusters",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<ClusterModel>> getClusterList();


    @ApiOperation(value = "获取单个索引详细信息", nickname = "getIndexInfo", notes = "", response = IndexModel.class, tags={ "indexes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = IndexModel.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/clusters/{cluster-id}/indexes/{index-name}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<IndexModel> getIndexInfo(@ApiParam(value = "集群唯一标识",required=true) @PathVariable("cluster-id") String clusterId,@ApiParam(value = "索引名称",required=true) @PathVariable("index-name") String indexName);


    @ApiOperation(value = "获取索引列表", nickname = "getIndexList", notes = "默认获取集群下所有索引，如果填写了user_id则获取用户拥有权限的索引", response = IndexModel.class, responseContainer = "List", tags={ "indexes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = IndexModel.class, responseContainer = "List"),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/clusters/{cluster-id}/indexes",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<IndexModel>> getIndexList(@ApiParam(value = "集群唯一标识",required=true) @PathVariable("cluster-id") String clusterId,@ApiParam(value = "用户id") @Valid @RequestParam(value = "user_id", required = false) String userId);


    @ApiOperation(value = "获取单个type详细信息", nickname = "getTypeInfo", notes = "", response = TypeModel.class, tags={ "types", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = TypeModel.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/clusters/{cluster-id}/indexes/{index-name}/types/{type-name}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<TypeModel> getTypeInfo(@ApiParam(value = "集群唯一标识",required=true) @PathVariable("cluster-id") String clusterId,@ApiParam(value = "索引名称",required=true) @PathVariable("index-name") String indexName,@ApiParam(value = "type名称",required=true) @PathVariable("type-name") String typeName);


    @ApiOperation(value = "获取type列表", nickname = "getTypeList", notes = "", response = TypeModel.class, responseContainer = "List", tags={ "types", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = TypeModel.class, responseContainer = "List"),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/clusters/{cluster-id}/indexes/{index-name}/types",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<TypeModel>> getTypeList(@ApiParam(value = "集群唯一标识",required=true) @PathVariable("cluster-id") String clusterId,@ApiParam(value = "索引名称",required=true) @PathVariable("index-name") String indexName);

    @ApiOperation(value = "修改一个elasticsearch集群", nickname = "updateCluster", notes = "", response = ResultEntity.class, tags={ "clusters", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ResultEntity.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/clusters/{cluster-id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<ResultEntity> updateCluster(@ApiParam(value = "集群唯一标识",required=true) @PathVariable("cluster-id") String clusterId,@ApiParam(value = "集群实体" ,required=true )  @Valid @RequestBody ClusterModel body);
    
}
