/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.4).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.zc.api;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.zc.model.DatasourceModel;
import com.zc.model.ResultEntity;

import javax.validation.Valid;
import java.util.List;

@Api(value = "datasources", description = "the datasources API")
public interface DatasourcesApi {

    @ApiOperation(value = "添加数据源", nickname = "addDatasource", notes = "", response = ResultEntity.class, tags={ "datasource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ResultEntity.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/datasources",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ResultEntity> addDatasource(@ApiParam(value = "数据源实体" ,required=true )  @Valid @RequestBody DatasourceModel body);


    @ApiOperation(value = "删除数据源", nickname = "deleteDatasource", notes = "", response = ResultEntity.class, tags={ "datasource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ResultEntity.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/datasources/{source-id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<ResultEntity> deleteDatasource(@ApiParam(value = "数据源id",required=true) @PathVariable("source-id") String sourceId);


    @ApiOperation(value = "获取所有数据源", nickname = "getDatasourceList", notes = "", response = DatasourceModel.class, responseContainer = "List", tags={ "datasource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = DatasourceModel.class, responseContainer = "List"),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/datasources",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<DatasourceModel>> getDatasourceList();


    @ApiOperation(value = "修改数据源", nickname = "updateDatasource", notes = "", response = ResultEntity.class, tags={ "datasource", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ResultEntity.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/datasources/{source-id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<ResultEntity> updateDatasource(@ApiParam(value = "数据源id",required=true) @PathVariable("source-id") String sourceId,@ApiParam(value = "数据源实体" ,required=true )  @Valid @RequestBody DatasourceModel body);

}
